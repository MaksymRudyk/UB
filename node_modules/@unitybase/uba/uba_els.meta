{
  "caption": "Entity Level Security(ELS)",
  "description": "Describe, which role have access permissions to Entities methods",
  "connectionName": "",
  "cacheType": "None",
  "sqlAlias": "els",
  "descriptionAttribute": "",
  "documentation": "Administering of entity level. The system checks the access by the rule (A)llowed and NOT (D)eny. \n User have access to method in case any user role exist in Allowed and no one user role exist in Deny. \n Deny enties take precedence over allow entries. This mean that if a user is a member of two groups, \n one that is allowed a permission and another that is a denied the same permission,\nthen user is denied that permission.\nRule type (C)omplement http://en.wikipedia.org/wiki/Complement_(set_theory) complement specified rights \n from role Allowed methods",
  "attributes": [
    {
      "name": "code",
      "dataType": "String",
      "size": 128,
      "caption": "Rule code",
      "description": "Code for ELS rule",
      "allowNull": true,
      "documentation": "This field is used by migrations for automatically update rules. It recommended to use your model code as rule prefix.\nWe do not set this attribute to unique, because some external models use the same code for different rules.\nBut all UnityBase models set this attribute to unique value"
    },
    {
      "name": "description",
      "dataType": "String",
      "size": 255,
      "caption": "Description",
      "description": "Rule description",
      "allowNull": false
    },
    {
      "name": "disabled",
      "dataType": "Boolean",
      "caption": "Disabled",
      "description": "Rule is disabled",
      "allowNull": false,
      "defaultValue": "0"
    },
    {
      "name": "entityMask",
      "dataType": "String",
      "size": 128,
      "caption": "Entity mask",
      "description": "",
      "allowNull": false,
      "documentation": "<h4>Masks wildchars (<strong>to prevent security issues we strongly recommend to use full method name instead of mask</strong>):</h4> <ul>\n<li>*Matches any contiguous characters</li>\n<li>? Matches any single characer</li>\n<li>[abc] Matches a or b or c at that position</li>\n<li>[^abc] Matches anything but a or b or c at that position</li>\n<li>[!abc] Matches anything but a or b or c at that position</li>\n<li>[a-e] Matches a through e at that position</li>\n<li>[abcx-z]  Matches a or b or c or x or y or or z, as does [a-cx-z]</li>\n</ul>\nExample: [iu]* match any string start from either 'i' or 'u' like: 'insetr', 'inner', 'update',..."
    },
    {
      "name": "methodMask",
      "dataType": "String",
      "size": 128,
      "caption": "Method mask",
      "description": "",
      "allowNull": false
    },
    {
      "name": "ruleType",
      "dataType": "Enum",
      "caption": "Rule type",
      "description": "Is this ALLOW rule(A) or DENY rule(D) or Complements(C) rule",
      "enumGroup": "UBA_RULETYPE",
      "allowNull": false,
      "defaultValue": "A"
    },
    {
      "name": "ruleRole",
      "dataType": "Entity",
      "associatedEntity": "uba_role",
      "caption": "Role",
      "description": "Role for which the rule applies",
      "allowNull": false
    }
  ],
  "mixins": {
    "mStorage": {
      "simpleAudit": true,
      "safeDelete": false
    },
    "multitenancy": {
      "enabled": false
    }
  }
}