const test = require('tape')
const yaml = require('js-yaml')
const utility = require('../lib/metadata/utility')
const {Container} = require('../lib/metadata')
const {registerEntity, setContainer} = require('../lib/extend')

/** @type {MigrationContext} */
const ctx = {conn: null, langConfig: {defaultLang: 'en', supportLang: ['en', 'uk']}, container: new Container()}

test('Register Entity', t => {
  setContainer(ctx.container)

  registerEntity(
    'simpleEntity',
    ['code'],
    ['name', 'category', 'subCategory']
  )

  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
product_code:
  name: name
  category: category
  subCategory: subCategory
`)),
      ctx.container.getFileType('simpleEntity'),
      ctx
    )),
    [
      {
        entity: 'simpleEntity',
        execParams: {
          code: 'product_code',
          name: 'name',
          category: 'category',
          subCategory: 'subCategory'
        }
      }
    ],
    'Shall register entity with only regular attributes'
  )

  registerEntity(
    'translatableEntity',
    ['code'],
    ['category', 'subCategory'],
    ['name']
  )
  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
product_code:
  name: {en: My Tasks, uk: Мої задачі}
  category: category
  subCategory: subCategory
`)),
      ctx.container.getFileType('translatableEntity'),
      ctx
    )),
    [
      {
        entity: 'translatableEntity',
        execParams: {
          code: 'product_code',
          'name_en^': 'My Tasks',
          'name_uk^': 'Мої задачі',
          category: 'category',
          subCategory: 'subCategory'
        }
      }
    ],
    'Shall register entity with translatable attributes'
  )

  t.throws(
    () => registerEntity(
      'throwEntity',
      ['code'],
      undefined,
      undefined,
      [{
        repository: 'unknown', attribute: 'user', targetAttribute: 'userID'
      }]
    ),
    Error('Cannot find repository name unknown during registering entity throwEntity'),
    'Shall throw an error with wrong repository name in lookup attributes'
  )

  // TODO: add test to lookup attributes. add connection to context?
  // registerEntity(
  //   'refEntity',
  // ['code'],
  // undefined,
  //   undefined,
  // [{
  //       repository: 'simpleEntity', attribute: 'smpl', targetAttribute: 'smplID'
  //     }]
  //)

  t.end()
})
