const test = require('tape')
const yaml = require('js-yaml')
const utility = require('../lib/metadata/utility')
const {Container} = require('../lib/metadata')
const {LocaleResources} = require('../lib/locale-resources')

/** @type {MigrationContext} */
const ctx = {
  conn: null,
  langConfig: {defaultLang: 'en', supportLang: ['en', 'uk']},
  options: {silent: true},
  container: new Container({silent: true}),
  resources: new LocaleResources()
}

require('../lib/registration/uba-metadata')(ctx.container)
require('../lib/registration/ubm-metadata')(ctx.container)

test('Enums', t => {
  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
OBJ_TYPE:
- category
- item2
`)),
      ctx.container.getFileType('enums'),
      ctx
    )),
    [
      {
        entity: 'ubm_enum',
        execParams: {
          eGroup: 'OBJ_TYPE',
          code: 'category',
          'name_en^': 'Category',
          'name_uk^': 'Category',
          sortOrder: 10
        }
      },
      {
        entity: 'ubm_enum',
        execParams: {eGroup: 'OBJ_TYPE', code: 'item2', 'name_en^': 'Item 2', 'name_uk^': 'Item 2', sortOrder: 20}
      }
    ],
    'Enum group, defined only strings'
  )

  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
OBJ_TYPE:
- category
- item2:
    sortOrder: 33
    shortName:
     en: it2
     uk: це2
- oneMore
`)),
      ctx.container.getFileType('enums'),
      ctx
    )),
    [
      {
        entity: 'ubm_enum',
        execParams: {
          eGroup: 'OBJ_TYPE',
          code: 'category',
          'name_en^': 'Category',
          'name_uk^': 'Category',
          sortOrder: 10
        }
      },
      {
        entity: 'ubm_enum',
        execParams: {
          eGroup: 'OBJ_TYPE',
          code: 'item2',
          'name_en^': 'Item 2',
          'name_uk^': 'Item 2',
          'shortName_en^': 'it2',
          'shortName_uk^': 'це2',
          sortOrder: 33
        }
      },
      {
        entity: 'ubm_enum',
        execParams: {
          eGroup: 'OBJ_TYPE',
          code: 'oneMore',
          'name_en^': 'One More',
          'name_uk^': 'One More',
          sortOrder: 43
        }
      }
    ],
    'Enum group, override sort order'
  )

  t.end()
})

test('Navigation', t => {
  /*
  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
dsk_test:
  caption: {en: Test Desktop, ru: Тестовый рабочий стол, uk: Тестовий рабочий стіл}
  iconCls: fas fa-desktop
  access: role1, role2
  isDefault: true
`)),
      ctx.container.getFileType('navigation'),
      ctx
    )),
    [
      {
        entity: 'ubm_desktop',
        execParams: {
          code: 'dsk_test',
          isDefault: true,
          iconCls: 'fas fa-desktop',
          'caption_en^': 'Test Desktop',
          'caption_uk^': 'Тестовий рабочий стіл'
        }
      },
      {entity: 'ubm_desktop_adm', execParams: {subject: 'role1', desktop: 'dsk_test'}},
      {entity: 'ubm_desktop_adm', execParams: {subject: 'role2', desktop: 'dsk_test'}}
    ],
    'Desktop access'
  )

  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
dsk_test:
  items:
  - cdn_countries:
      caption: {en: Countries, uk: Довідник країн}
  - cdn_cities:
      caption: Cities
`)),
      ctx.container.getFileType('navigation'),
      ctx
    )),
    [
      {
        entity: 'ubm_desktop',
        execParams: {code: 'dsk_test', 'caption_en^': 'Dsk Test', 'caption_uk^': 'Dsk Test'}
      },
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'cdn_countries', desktop: 'dsk_test',
          isFolder: false, displayOrder: 10,
          'caption_en^': 'Countries',
          'caption_uk^': 'Довідник країн'
        }
      },
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'cdn_cities', desktop: 'dsk_test',
          isFolder: false, displayOrder: 20,
          'caption_en^': 'Cities',
          'caption_uk^': 'Cities'
        }
      }
    ],
    'Desktop shortcuts, custom captions'
  )

  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
dsk_test:
  items:
  - cdn_countries
  - cdn_currencies:
      displayOrder: 42
  - cdn_cities
`)),
      ctx.container.getFileType('navigation'),
      ctx
    )),
    [
      {
        entity: 'ubm_desktop',
        execParams: {code: 'dsk_test', 'caption_en^': 'Dsk Test', 'caption_uk^': 'Dsk Test'}
      },
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'cdn_countries', desktop: 'dsk_test',
          isFolder: false, displayOrder: 10,
          'caption_en^': 'Cdn Countries',
          'caption_uk^': 'Cdn Countries'
        }
      },
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'cdn_currencies', desktop: 'dsk_test',
          isFolder: false, displayOrder: 42,
          'caption_en^': 'Cdn Currencies',
          'caption_uk^': 'Cdn Currencies'
        }
      },
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'cdn_cities', desktop: 'dsk_test',
          isFolder: false, displayOrder: 52,
          'caption_en^': 'Cdn Cities',
          'caption_uk^': 'Cdn Cities'
        }
      }
    ],
    'Desktop shortcuts, displayOrder'
  )
*/
  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
dsk_test:
  caption: {en: Test, uk: Тест}
  description: {en: Test_description, uk: Тест_описания}
`)),
      ctx.container.getFileType('navigation'),
      ctx
    )),
    [
      { entity: 'ubm_desktop',
        execParams: {
          code: 'dsk_test',
          'caption_en^': 'Test',
          'caption_uk^': 'Тест',
          'description_en^': 'Test_description',
          'description_uk^': 'Тест_описания'
        }
      },
    ],
    'Desktop multilang description'
  )

  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
dsk_test:
  access: [role1, role2]
  items: [cdn_countries]
`)),
      ctx.container.getFileType('navigation'),
      {conn: null, langConfig: {defaultLang: 'en', supportLang: ['en']}, options: {}, container: ctx.container, resources: new LocaleResources()}
    )),
    [
      {entity: 'ubm_desktop', execParams: {code: 'dsk_test', 'caption_en^': 'Dsk Test'}},
      {entity: 'ubm_desktop_adm', execParams: {subject: 'role1', desktop: 'dsk_test'}},
      {entity: 'ubm_desktop_adm', execParams: {subject: 'role2', desktop: 'dsk_test'}},
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'cdn_countries', desktop: 'dsk_test',
          isFolder: false, displayOrder: 10,
          'caption_en^': 'Cdn Countries'
        }
      },
      {entity: 'ubm_navshortcut_adm', execParams: {subject: 'role1', shortcut: 'cdn_countries'}},
      {entity: 'ubm_navshortcut_adm', execParams: {subject: 'role2', shortcut: 'cdn_countries'}},
    ],
    'Shortcuts inherit access'
  )

  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
dsk_test:
  access: [role1, role2]
  items:
  - cdn_countries:
      access: role3
`)),
      ctx.container.getFileType('navigation'),
      {conn: null, langConfig: {defaultLang: 'en', supportLang: ['en']}, container: ctx.container}
    )),
    [
      {entity: 'ubm_desktop', execParams: {code: 'dsk_test', 'caption_en^': 'Dsk Test'}},
      {entity: 'ubm_desktop_adm', execParams: {subject: 'role1', desktop: 'dsk_test'}},
      {entity: 'ubm_desktop_adm', execParams: {subject: 'role2', desktop: 'dsk_test'}},
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'cdn_countries', desktop: 'dsk_test',
          isFolder: false, displayOrder: 10,
          'caption_en^': 'Cdn Countries'
        }
      },
      {entity: 'ubm_navshortcut_adm', execParams: {subject: 'role3', shortcut: 'cdn_countries'}},
    ],
    'Shortcuts override desktop access'
  )

  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
dsk_test:
  items:
  - cdn_dictionaries:
      items:
      - cdn_countries
`)),
      ctx.container.getFileType('navigation'),
      {conn: null, langConfig: {defaultLang: 'en', supportLang: ['en']}, container: ctx.container}
    )),
    [
      {entity: 'ubm_desktop', execParams: {code: 'dsk_test', 'caption_en^': 'Dsk Test'}},
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'cdn_dictionaries', desktop: 'dsk_test',
          isFolder: true, displayOrder: 10,
          'caption_en^': 'Cdn Dictionaries'
        }
      },
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'cdn_countries', parent: 'cdn_dictionaries', desktop: 'dsk_test',
          isFolder: false,
          displayOrder: 10,
          'caption_en^': 'Cdn Countries'
        }
      }
    ],
    'Shortcut folders - reset numbering, set parent, set isFolder'
  )

  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
dsk_test:
  access: role1,role2
  items:
  - folder:
      access: role3
      items: [cdn_countries]
`)),
      ctx.container.getFileType('navigation'),
      {conn: null, langConfig: {defaultLang: 'en', supportLang: ['en']}, container: ctx.container}
    )),
    [
      {entity: 'ubm_desktop', execParams: {code: 'dsk_test', 'caption_en^': 'Dsk Test'}},
      {entity: 'ubm_desktop_adm', execParams: {subject: 'role1', desktop: 'dsk_test'}},
      {entity: 'ubm_desktop_adm', execParams: {subject: 'role2', desktop: 'dsk_test'}},
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'folder', desktop: 'dsk_test',
          isFolder: true, displayOrder: 10,
          'caption_en^': 'Folder'
        }
      },
      {entity: 'ubm_navshortcut_adm', execParams: {subject: 'role3', shortcut: 'folder'}},
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'cdn_countries',
          parent: 'folder',
          desktop: 'dsk_test',
          isFolder: false, displayOrder: 10,
          'caption_en^': 'Cdn Countries'
        }
      },
      {entity: 'ubm_navshortcut_adm', execParams: {subject: 'role3', shortcut: 'cdn_countries'}}
    ],
    'Shortcuts inherit access from folders'
  )

  function getCmdCode(def) {
    def = `
dsk_test:
  items:
    cdn_countries:
` + def
    const result = Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(def)),
      ctx.container.getFileType('navigation'),
      {conn: null, langConfig: {defaultLang: 'en', supportLang: ['en']}, container: ctx.container}
    ))
    if (result.length !== 2) {
      t.fail('Expected 2 items')
    }
    return result[1].execParams.cmdCode
  }

  t.deepEquals(
    getCmdCode(`
      showList:
        entity: cdn_something
        fieldList:
        - attr1
        - attr2
`),
    '{"cmdType":"showList","cmdData":{"params":[{"entity":"cdn_something","fieldList":["attr1","attr2"]}]}}',
    'Shortcuts showList'
  )

  t.deepEquals(
    getCmdCode(`
      showList:
        entity: cdn_something
        fieldList:
        - attr1
        - attr2
        hideActions: del, addNew
`),
    '{"cmdType":"showList","cmdData":{"params":[{"entity":"cdn_something","fieldList":["attr1","attr2"]}]},"hideActions":["del","addNew"]}',
    'Shortcuts showList with hideActions'
  )

  t.deepEquals(
    getCmdCode(`
      showList:
        entity: cdn_something
        fieldList:
        - attr1
        - name: attr2
          description: localize_attr2
`),
    '{"cmdType":"showList","cmdData":{"params":[{"entity":"cdn_something","fieldList":["attr1",{"name":"attr2","description":UB.i18n(\'localize_attr2\')}]}]}}',
    'Shortcuts showList - localization of attribute description'
  )

  t.deepEquals(
    getCmdCode(`
      showList:
        entity: cdn_something
        fieldList: '*'
`),
    '{"cmdType":"showList","cmdData":{"params":[{"entity":"cdn_something","fieldList":"*"}]}}',
    'Shortcuts showList - localization of attribute description'
  )

  t.deepEquals(
    getCmdCode(`
      showList:
        entity: cdn_something
        fieldList:
        - attr1
        - name: attr2
          description: localize_attr2
        - format: "function(v){return Ext.Date.format(v, 'd-m-Y')}"
`),
    `{"cmdType":"showList","cmdData":{"params":[{"entity":"cdn_something","fieldList":["attr1",{"name":"attr2","description":UB.i18n('localize_attr2')},{"format":function(v){return Ext.Date.format(v, 'd-m-Y')}}]}]}}`,
    'Shortcuts showList - substitute format function'
  )

  t.deepEquals(
    getCmdCode(`
      showList:
        entity: cdn_something
        fieldList:
        - attr1
        - attr2
        cmpInitConfig: >
          {afterInit: function (){}}
`),
    `{"cmdType":"showList","cmdData":{"params":[{"entity":"cdn_something","fieldList":["attr1","attr2"],"cmpInitConfig":"{afterInit: function (){}}\\n"}]}}`,
    'Shortcuts showList - substitute cmpInitConfig'
  )

  t.deepEquals(
    getCmdCode(`
      showList:
        renderer: vue
        entity: cdn_something
        fieldList: '*'
`),
    `{"cmdType":"showList","cmdData":{"params":[{"entity":"cdn_something","fieldList":"*"}]},"renderer":"vue"}`,
    'Shortcuts showList - setup renderer'
  )

  t.deepEquals(
    getCmdCode(`
      showForm: my_Entity-form
`),
    '{"cmdType":"showForm","formCode":"my_Entity-form","entity":"my_Entity"}',
    'Shortcuts showForm'
  )

  t.deepEquals(
    Array.from(utility.transformAndTranslate(
      utility.iterateList(yaml.safeLoad(`
dsk_test:
  $amendment: true
  items:
  - folder:
      isFolder: true
`)),
      ctx.container.getFileType('navigation'),
      {conn: null, langConfig: {defaultLang: 'en', supportLang: ['en']}, container: ctx.container}
    )),
    [
      {
        entity: 'ubm_navshortcut',
        execParams: {
          code: 'folder', desktop: 'dsk_test',
          isFolder: true, displayOrder: 10,
          'caption_en^': 'Folder'
        }
      }
    ],
    'Ability to create an empty folder'
  )

  t.deepEquals(
    getCmdCode(`
      cmd: >
        {
          "cmdType": "showList",
          "cmdData": {
            "params": [{
              "entity": "bpm_Task",
              "method": "select",
              "fieldList": ["subject", "description", "status"]
            }]
          }
        }
`),
    `{
  "cmdType": "showList",
  "cmdData": {
    "params": [{
      "entity": "bpm_Task",
      "method": "select",
      "fieldList": ["subject", "description", "status"]
    }]
  }
}
`,
    'Shortcuts cmd "as is"'
  )

  t.end()
})
