{
  "id": "https://unitybase.info/models/UB/schemas/ubConfig.schema.json",
  "$schema": "http://json-schema.org/schema#",
  "title": "UnityBase configuration",
  "description": "Property values in the configuration may include: <ul><li>`%ENV_VAR%` - will be replaced by value of OS environment variable with the same name</li><li>`\"#include(pathToFile)\"` - will be replace by content of file `pathToFile`</li><li>`//#ifdef(%ENV_VAR%)...//#endif - keep a part of JSON content between ifdef/endif in case environment variable `ENV_VAR` defined and not empty; also `#ifndef` and #ifdef(%ENV_VAR%=value) is available`</li><li>Can be combined as such: `\"#include(%UB_HOME%/models/defHeadersPostprocessors.json)\"`</li></ul>",
  "type": "object",
  "additionalProperties": false,
  "required": [],
  "defaultProperties": [],
  "properties": {
    "httpServer": {
      "type": "object",
      "description": "Built-in HTTP server configuration",
      "additionalProperties": false,
      "required": [  ],
      "defaultProperties": [
        "serverType",
        "protocol",
        "host",
        "port",
        "autoShutdownTimeoutSec"
      ],
      "properties": {
        "serverType": {
          "enum": [
            "HTTPSys",
            "Socket",
            "None"
          ],
          "default": "HTTPSys",
          "description": "The type of HTTP server. For Windows default is HTTPSys, for Linux - Socket\n\n |Value  |Description\n|-\n| `None`|No HTTP server\n| `HTTPSys`| HTTP.sys kernel mode driver used. Fast, but require URL to be written to routing table using _ub -http register_ command \n| `Socket` | Plain socket. Require reverse proxy for production usage"
        },
        "protocol": {
          "enum": [
            "http",
            "https"
          ],
          "default": "http",
          "description": "Communication protocol. For SSL based protocols additional steps required for setting up a certificates. See <a href=\"/api/serverNew/tutorial-http_server.html\">this article</a>"
        },
        "host": {
          "type": "string",
          "default": "+",
          "description": "Host name for server. Could be either a fully qualified case-insensitive domain name, <br> an IPv4 or IPv6 literal string, <br> or a wildcard ('+' will bound to all domain names for the specified port, '*' will accept the request when no other listening host names match the request for that port)<br>Under Unix can be a Unix Domain Socket in format 'unix:/path/to/appname.socket'"
        },
        "port": {
          "type": "string",
          "default": "8881",
          "description": "Port to listen on. Keep empty for UDS"
        },
        "path": {
          "type": "string",
          "default": "/",
          "description": "Begin of URL to listen on. Server will listen on `protocol://host:port/path`.<br>Several HTTPSys based server instances can share the same `host:port` combinations with the different paths"
        },
        "externalURL": {
          "type": "string",
          "default": "equal to full server URL",
          "description": "URL that the User will use to access your server. To be used in case server is behind a reverse proxy"
        },
        "additionalURLs": {
          "type": "array",
          "description": "Windows only. Additional URLs to listen on. Must be registered MANUALLY in the HTTP.SYS routing table",
          "items": {
            "type": "string",
            "description": "Full URL, for example `https://my.domain:443/` or `http://my.domain:80/path`"
          }
        },
        "threadPoolSize": {
          "type": "number",
          "minimum": 1,
          "maximum": 64,
          "description": "Working thread count. Default is SystemThreadCount available for application based on process affinity mask"
        },
        "inetPub": {
          "type": "string",
          "description": "Path to folder with static files (accessible using `/statics` endpoint), applicable to server. Model-specific files must be placed inside models `public` folder"
        },
        "inetIndex": {
          "type": "string",
          "description": "If a static file request ends with a slash, UB treats it as a request for a directory and tries to find an index file in the directory. The `inetIndex` directive defines the index file name (the default value is `index.html`)",
          "default": "index.html"
        },
        "requestQueueLength": {
          "type": "number",
          "default": 1000,
          "description": "Request queue length. <br> Increase this value in case of many invalid responses or in case in HTTP.sys log files (normally in _C:\\Windows\\System32\\LogFiles\\HTTPERR\\httperr\\*.log_) you see QueueFull messages. <br> In case of Linux and server is behind the reverse proxy we recommend do set this value to 100 to enable a quickly reballancing "
        },
        "maxBandwidth": {
          "type": "number",
          "default": 0,
          "description": "The maximum allowed bandwidth rate in bytes per second (via HTTP API 2.0). Setting this value to 0 allows an unlimited bandwidth (default)"
        },
        "maxConnections": {
          "type": "number",
          "default": 0,
          "description": "The maximum number of HTTP connections allowed (only for Vista+ or Windows Server2008+).<br>Setting this value to 0 allows an unlimited number of connections (default)"
        },
        "allowCORSFrom": {
          "type": "string",
          "description": "Origins for cross-origin resource sharing (CORS). See <a href=\"https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS\">mozilla documentation</a><br>Can be set e.g. to '\"*\"' to allow requests from any sites, or specify an URI to be allowed as origin (e.g. 'http://foo.example'). By default (empty) CORS are not allowed"
        },
        "compression": {
          "enum": [
            "zip",
            "deflate"
          ],
          "default": "zip",
          "description": "Enable traffic compression. For individual response compression applied if response body size > 1024 and request contains Accept-Encoding: header"
        },
        "timeouts": {
          "type": "object",
          "description": "For advanced use only! Will override a http protocol timeouts. See <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa364661(v=vs.85).aspx\">this article</a> for details",
          "additionalProperties": false,
          "defaultProperties": [
            "entityBody",
            "drainEntityBody",
            "requestQueue",
            "idleConnection",
            "headerWait",
            "minSendRate"
          ],
          "properties": {
            "entityBody": {
              "type": "number",
              "default": 120,
              "description": "The time, in seconds, allowed for the request entity body to arrive"
            },
            "drainEntityBody": {
              "type": "number",
              "default": 120,
              "description": "The time, in seconds, allowed for the HTTP Server API to drain the entity body on a Keep-Alive connection"
            },
            "requestQueue": {
              "type": "number",
              "default": 120,
              "description": "The time, in seconds, allowed for the request to remain in the request queue before the application picks it up"
            },
            "idleConnection": {
              "type": "number",
              "default": 120,
              "description": "The time, in seconds, allowed for an idle connection"
            },
            "headerWait": {
              "type": "number",
              "default": 120,
              "description": "The time, in seconds, allowed for the HTTP Server API to parse the request header"
            },
            "minSendRate": {
              "type": "number",
              "default": 150,
              "description": "Set it to 0 to remove limit at all. The minimum send rate, in bytes-per-second, for the response. The default response send rate is 150 bytes-per-second"
            }
          }
        },
        "autoShutdownTimeoutSec": {
          "type": "number",
          "default": 0,
          "description": "Linux only(UB>=5.18.5). In case no HTTP requests arrived during this timeout (in seconds) server will shutdown itself. Default is 0 - no auto shutdown"
        },
        "reverseProxy": {
          "type": "object",
          "description": "Reverse proxy settings. It is strictly recommended to use reverse proxy on production",
          "additionalProperties": false,
          "properties": {
            "kind": {
              "enum": [
                "nginx"
              ],
              "description": "Server what used as a reverse-proxy."
            },
            "remoteIPHeader": {
              "type": "string",
              "description": "The value of a custom HTTP header containing the real client IP. By default, the RemoteIP information will be retrieved from the socket layer - but if the server runs behind some proxy service, you should define here the HTTP header name which indicates the true remote client IP value, mostly as 'X-Real-IP' or 'X-Forwarded-For'",
              "default": "X-Real-IP"
            },
            "remoteConnIDHeader": {
              "type": "string",
              "description": "The value of a custom HTTP header containing the real client connection ID. Required for Kerberos/UBLDAP authentication and correct logging of real client connection ID. In case of nginx value is taken from $connection nginx variable",
              "default": "X-Conn-IP"
            },
            "sendFileHeader": {
              "type": "string",
              "default": "X-Accel-Redirect",
              "description": "Send static files using reverse proxy X-Sendfile feature. For nginx should be `X-Accel-Redirect`"
            },
            "sendFileLocationRoot": {
              "type": "string",
              "default": "externalURL hostname with '.' replaced by '-' (http://test.com -> test-con)" ,
              "description": "Prefix added to the beginning of sendFileHeader location"
            },
            "serveStatic": {
              "type": "boolean",
              "default": true,
              "description": "If true then generateNginxCfg command will add /clientRequire & /models interception by nginx. Folder with static asserts can be prepared by `npx ubcli linkStatic` command"
            },
            "securityZoneHeader": {
              "type": "string",
              "default": "",
              "description": "The value of a custom HTTP header containing the security zone identifier. Should be defined in case nginx is configured to calc a security zones. Recommended value is `X-Sec-Zone`. If empty UB EE will fallback to internal security zone calculation"
            }
          }
        }
      }
    },
    "wsServer": {
      "type": "object",
      "description": "Built-in WebSocket server configuration",
      "additionalProperties": false,
      "defaultProperties": [
        "protocol",
        "host",
        "port",
        "path"
      ],
      "properties": {
        "protocol": {
          "enum": [
            "ws",
            "wss"
          ],
          "default": "ws",
          "description": "Communication protocol"
        },
        "host": {
          "type": "string",
          "default": "",
          "description": "Host names for server. See `httpServer.host` for details. If empty - WS server do not run at all"
        },
        "port": {
          "type": "string",
          "default": "8881",
          "description": "Port to listen on"
        },
        "path": {
          "type": "string",
          "default": "/",
          "description": "Begin of URL to listen on. Server will listen on `protocol://host:port/path`"
        },
        "threadPoolSize": {
          "type": "number",
          "minimum": 1,
          "maximum": 64,
          "default": 1,
          "description": "Working thread count. Default is 1"
        },
        "pingTimeout": {
          "type": "number",
          "minimum": 0,
          "default": 0,
          "description": "Ping (verification of the fact that the WS connection is alive) in seconds. 0 means no ping send."
        }
      }
    },
    "logging": {
      "type": "object",
      "description": "Logging configuration",
      "properties": {
        "levels": {
          "type": "array",
          "description": "Type of events to put to log file. \"*\" - all events. To enable logging of a remote debug protocol on log level Custom4 set an environment variable FF_RDP_DEBUG=true",
          "_format": "table",
          "default": [
            "LastError",
            "Error",
            "Exception",
            "ExceptionOS"
          ],
          "items": {
            "enum": [
              "*",
              "Info",
              "Debug",
              "Trace",
              "Warning",
              "Error",
              "Enter",
              "Leave",
              "LastError",
              "Exception",
              "ExceptionOS",
              "Memory",
              "StackTrace",
              "Fail",
              "SQL",
              "Cache",
              "Result",
              "DB",
              "HTTP",
              "Client",
              "Server",
              "ServiceCall",
              "ServiceReturn",
              "UserAuth",
              "Custom1",
              "Custom2",
              "Custom3",
              "Custom4",
              "NewRun",
              "Monitoring"
            ]
          }
        },
        "path": {
          "type": "string",
          "default": "",
          "description": "Path to folder where server place log files (including rotated logs). Keep it empty to disable output of logs logs to the files. If build-in log rotation is disabled by setting rotationSizeInMB to 0 then path is a path to the FILE (example: \"./logs/my-app.log\")"
        },
        "rotationSizeInMB": {
          "type": "number",
          "default": 100,
          "minimum": 0,
          "maximum": 2048,
          "description": "If log file reaches this size, it will be rotated. If 0 then rotation is disabled and path must be either empty string or path to a FILE"
        },
        "threadingModel": {
          "default": "IdentifiedInOnFile",
          "description": "DEPRECATED (always IdentifiedInOnFile)",
          "enum": [
            "OneFilePerThread",
            "MergedInOneFile",
            "IdentifiedInOnFile"
          ]
        },
        "slowQueryThreshold": {
          "type": "number",
          "default": 200,
          "description": "If database query execution (**including** fetching data) exceed this time (in millisecond) such query will be put in the log with logLevel `Custom2`"
        },
        "flushTimeOut": {
          "type": "number",
          "default": 10,
          "description": "The time (in seconds) after which the log content must be written on disk, whatever the current content size is. In all case the log file will be written for every 4 KB of log"
        },
        "stackTrackDepth": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 255,
          "description": "The recursive depth of stack trace symbol to write. Used only if exceptions are handled, or by StackTrace level. 0 mean no stack trace"
        }
      }
    },
    "metrics": {
      "type": "object",
      "description": "Metrics collector settings (added in UB 5.18.21). See [metrics tutorial](https://unitybase.info/api/server-v5/tutorial-production_env.html#metrics) for details",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable metrics collection"
        },
        "allowedFrom": {
          "type": "string",
          "description": "Semicolon separated list of allowed subnets for /metrics endpoint; Restriction applied on reverse proxy level by ubcli generateNginxCfg. Direct access (without proxy) is allowed for everyone",
          "default": ""
        },
        "disableMethodProfile": {
          "type": "boolean",
          "default": false,
          "description": "Disable histogram metric for entity methods execution time"
        }
      }
    },
    "javascript": {
      "type": "object",
      "description": "**DEPRECATED** - starting from UB 5.18.12 use command line switches or env. vars. JavaScript VM configuration",
      "properties": {
        "timeout": {
          "type": "number",
          "default": -1,
          "description": "Script execution timeout (in seconds). -1 mean unlimited"
        },
        "lifetimeInMinutes": {
          "type": "number",
          "default": 360,
          "description": "Context lifetime (in minutes). After this period context will be recreated. Set to small value if your application have a memory leak inside JS"
        },
        "fullGCPeriod": {
          "type": "number",
          "default": 100,
          "minimum": 1,
          "description": "Number of incoming request handled by current thread after which server perform a full GC. Setting this number to small value will slow down the server, but help to protect against `out of memory` in bad designed code. Full garbage collection is a long operation, so setting this parameter to small value will slow down a server"
        },
        "maxPerEngineMemory": {
          "type": "number",
          "default": 512,
          "minimum": 32,
          "maximum": 2028,
          "description": "Maximum amount of memory (in megabytes) accessible for one JS engine. Every thread have his own engine and all threads share the same process memory (max 3.7Gb for 32 bit app). It is important to find a balance between the number of threads and maxPerEngineMemory"
        },
        "maxRecursionDepth": {
          "type": "number",
          "default": 32,
          "description": "Maximum recursion depth"
        },
        "debuggerListenOn": {
          "type": "string",
          "default": "6000",
          "description": "[IP_Adress:]port where remote debugger is listen on. If IP_Address is omitted - 0.0.0.0 will be used. Debugger enabled only in -dev mode"
        }
      }
    },
    "security": {
      "type": "object",
      "description": "Security settings",
      "properties": {
        "authenticationMethods": {
          "type": "array",
          "description": "List of supported authentication methods",
          "items": {
            "enum": [
              "CERT",
              "CERT2",
              "Negotiate",
              "UBLDAP",
              "UB",
              "Basic",
              "UBIP",
              "OpenIDConnect"
            ]
          }
        },
        "lockOutInDB": {
          "type": "boolean",
          "default": false,
          "description": "Whenever user account is locked out permanently using `uba_user.disabled` or temporary for lockOutTimeoutSec after `UBA.passwordPolicy.maxInvalidAttempts` invalid login attempts. Since: UB@5.19.6"
        },
        "lockOutTimeoutSec": {
          "type": "number",
          "default": 300,
          "description": "Timeout is seconds for temporary lock out for account, in case lockOutInDB is false. Note: account lock out feature works for only for `UB` and `Basic` auth. Since: UB@5.19.6"
        },
        "zones": {
          "type": "array",
          "description": "EE edition. Security zones definition. Used as fallback in case reverse proxy securityZoneHeader configuration is empty",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Security zone name"
              },
              "includes": {
                "type": "array",
                "description": "Subnet masks to include in this security zone. Country-specific subnet masks can be downloaded from https://www.ip2location.com/free/visitor-blocker (use CIDR format)",
                "items": {
                  "type": "string",
                  "description": "Subnet mask in format x.x.x.x/y"
                }
              }
            }
          }
        },
        "zonesAuthenticationMethods": {
          "type": "array",
          "description": "EE edition. Authentication methods available for each security zone",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Security zone name"
              },
              "authenticationMethods": {
                "type": "array",
                "description": "List of authentication methods allowed for this security zone",
                "items": {
                  "enum": [
                    "CERT",
                    "CERT2",
                    "Negotiate",
                    "UBLDAP",
                    "UB",
                    "Basic",
                    "UBIP",
                    "OpenIDConnect"
                  ]
                }
              }
            }
          }
        },
        "forceNTLM": {
          "type": "boolean",
          "default": false,
          "description": "Will force a NTLM usage for Negotiate authentication method. If false (default starting from UB 5.18.1) - Kerberos will be used in most case. **Security warning** - even Microsoft strongly recommend to not use a NTLM. Please, use Kerberos аor the security of your data"
        },
        "simpleCertAuth": {
          "type": "boolean",
          "default": true,
          "description": "Disable user name and password checking for CERT auth. If `false` uiSettings.adminUI.authenticationCert.requireUserName should be set to true"
        },
        "domainMap": {
          "type": "object",
          "description": "Dictionary for converting fully qualified domain names to NT4-style NetBIOS names (Linux only). If empty or key not found then FQND will be truncated on first dot"
        },
        "ldapCatalogs": {
          "type": "array",
          "description": "If `userName` passed to `auth` in form `DOMAIN\\domainUser` and `UBLDAP` is present in `authenticationMethods` user credentials will be checked by request to LDAP catalog. **WARNING** - ldap password is passed in plain text other network, so server should accept only HTTPS connection to be secure",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of domain"
              },
              "URL": {
                "type": "string",
                "description": "LDAP query; See https://unitybase.info/api/server-v5/tutorial-security.html#ldap-authentication for details"
              },
              "CAPath": {
                "type": "string",
                "description": "UB<5.18.1 on Unix and all UB version on Windows: optional path to folder with CA certificates. See https://curl.haxx.se/docs/sslcerts.html"
              },
              "ignoreSSLCertificateErrors": {
                "type": "boolean",
                "description": "UB<5.18.1 on Unix and all UB version on Windows: ignore SSL certificates errors (sets SSLVerifyPeer and SSLVerifyHost to false); **NOT RECOMMENDED**",
                "default": false
              }
            }
          }
        },
        "jsonRequestsOnly": {
          "type": "boolean",
          "default": false,
          "description": "Limit request types only to JSON requests"
        },
        "dstu": {
          "type": "object",
          "description": "For Ukraine government services only",
          "properties": {
            "iit": {
              "type": "object",
              "description": "IIT library configuration",
              "properties": {
                "libraryPath": {
                  "type": "string",
                  "default": "starts from UB 5.18.16 is resolved automatically to @ub-d/iit-libbin/bin"
                },
                "librarySettings": {
                  "type": "string",
                  "description": "path to folder with IIT library settings file (osplm.ini for Linux and ospus.ini for Windows). If empty - IIT will try to load settings from registry (under Windows) and this will cause a problems with registry virtualization. If settings file not exist inside specified folder it will be created"
                },
                "mediaType": {
                  "type": "number",
                  "description": "порядковый индекс типа устройства начинактся с 0"
                },
                "mediaNumber": {
                  "type": "number",
                  "description": "порядковый индекс устройства начинактся с 0"
                },
                "keyPath": {
                  "type": "string",
                  "description": "full path to the keystore for filesystem based media type"
                },
                "password": {
                  "type": "string",
                  "description": "keystore password. If empty - server private key will not be loaded and signing by the server key is not possible"
                },
                "strictMode": {
                  "type": "boolean",
                  "default": true,
                  "description": "Turn off offline mode; If TSP disabled - enable and set TSP server to http://ca.informjust.ua/services/tsp:80; Force signature format to CADES_X_LONG"
                },
                "hsm": {
                  "type": "object",
                  "description": "Hardware Security Module configuration for server-side signing using keys stored inside HSM (`iitCtypto.hsm*` functions)",
                  "properties": {
                    "mediaType": {
                      "type": "number",
                      "description": "порядковый индекс типа устройства начинактся с 0"
                    },
                    "mediaNumber": {
                      "type": "number",
                      "description": "порядковый индекс устройства начинактся с 0"
                    },
                    "password": {
                      "type": "string",
                      "description": "HSM password (not a user key password)"
                    }
                  }
                }
              }
            },
            "findCertificateBySerial": {
              "type": "boolean",
              "default": false,
              "description": "Used with `CERT` authentication to force search for user certificates only by by serial number (without issuer)"
            },
            "trafficEncryption": {
              "type": "boolean",
              "default": false,
              "description": "encrypt client<->server traffic using DSTU algorithm"
            },
            "nonEncryptedIPs": {
              "type": "array",
              "description": "IP addresses for witch DSTU encryption are disabled",
              "items": {
                "type": "string"
              }
            },
            "encryptionKeyLifeTime": {
              "type": "number",
              "default": 0,
              "description": "timeout in seconds after witch client must change encryption key. 0 - unlimited"
            }
          }
        },
        "localIPs": {
          "type": "string",
          "default": "",
          "description": "Semicolon delimited list of server IP addresses. <b>WARNING</b> To be used ONLY in case server can't resolve local addresses automatically. In case of wrong configuration unauthorised server access is possible"
        },
        "skipCheckingCallerAndSessionIpEquality": {
          "type": "boolean",
          "default": false,
          "description": "In case some middleware intercepts Authorization requests and redirect it to UB Session IP (IP address from which session is created) may differ from CallerIP (IP address of middleware). To allow such a requests set this parameter to `true`. **WARNING** vulnerability to token interception attacks"
        },
        "limitGroupsTo": {
          "type": "array",
          "default": [],
          "description": "Groups codes (uba_group.code) to limit available user groups during user logon. Useful in case a same DB is used by several server instances, and one of instance (public portal for example) should limit roles available to user\r\n**WARNING**: roles what assigned directly to user (in uba_userroles) are **NOT** filtered and remains available"
        },
        "excludeGroups": {
          "type": "array",
          "default": [],
          "description": "Groups codes (uba_group.code) to exclude from user groups during user logon. Useful in case a same DB is used by several server instances, and one of instance (internal portal for example) should exclude  roles available to user\r\n**WARNING**: roles what assigned directly to user (in uba_userroles) are **NOT** filtered and remains available"
        },
        "multitenancy": {
          "type": "object",
          "description": "Multitenancy configuration (UB EE)",
          "oneOf":[
            {
              "required": ["tenantIDHeader"]
            },
            {
              "required": ["tenants"]
            }
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "enable multitenancy for application",
              "default": false
            },
            "tenantIDHeader": {
              "type": "string",
              "description": "HTTP request header contains a tenantID. Can be sets on reverse proxy level. If not empty - preferred over tenants from ubConfig"
            },
            "tenants": {
              "type": "array",
              "description": "URL -> tenant ID pairs. Not used if tenantIDHeader is configured",
              "items": {
                "type": "object",
                "properties": {
                  "URI": {
                    "type": "string",
                    "description": "Host name user navigate to. For non-standard ports (neither 80 nor 443 must include port 'my.app.com:1224'"
                  },
                  "TID": {
                    "type": "number",
                    "description": "A tenant ID for this URI. values below 100 reserved for internal usage"
                  }
                }
              }
            },
            "redirectURL": {
              "type": "string",
              "description": "URL to temporary redirect from URL's what not registered as a tenant URL; If empty - server returns 404 for such addresses"
            }
          }
        }
      }
    },
    "application": {
      "type": "object",
      "description": "Business logic configuration",
      "properties": {
        "schedulers": {
          "type": "object",
          "description": "Schedulers",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": "true",
              "description": "If `false` all scheduler jobs are disabled for this application"
            }
          }
	    },
	    "rootHandler": {
          "type": "string",
          "description": "Either a endpoint name (method added via `App.registerEndpoint`) or static file from `inetPub` returned during request to `/`",
          "default": "index.html"
        },
        "defaultLang": {
          "type": "string",
          "description": "In case application support internationalization - default locale"
        },
        "domain": {
          "type": "object",
          "description": "Application domain",
          "properties": {
            "models": {
              "type": "array",
              "description": "Domain models. Loaded in the order in which they appear in this array",
              "items": {
                "type": "object",
                "required": ["path"],
                "properties": {
                  "name": {
                    "type": "string",
                    "unique": true,
                    "description": "Model name. If omitted - will be taken from model package.json `config.ubmodel.name`"
                  },
                  "path": {
                    "type": "string",
                    "description": "Path to model folder. All *.meta and *.js will be loaded from this path and it's subdirectory"
                  },
                  "publicPath":{
                    "type": "string",
                    "default": "path + 'public'",
                    "description": "Path to public model folder. If model name is taken from model package.json publicPath can also be defined there"
                  }
                }
              }
            },
            "vendorModels": {
              "type": "string",
              "description": "Colon separated folder names (sub-folders of %UB_APPHOME%models/ folder) of vendor models. This models will be added to domain models during server startup. Example \"KS:KS_BPM\" "
            },
            "customerModels": {
              "type": "string",
              "description": "Colon separated folder names (sub-folders of %UB_APPHOME%cmodels/ folder) of customer models. This models will be added to domain models after vendorModels during server startup. Example \"ksc\" "
            },
            "implicitlyAddedMixins": {
              "type": "array",
              "description": "An array of names of the mixins, which will be added to each entity. <br> For individual entity mixin can be disabled by setting `mixins.mixinName.enabled: false` in the `meta` file",
              "default": ["audit"],
              "items": {
                "type": "string"
              }
            }
          }
        },
        "connections": {
          "type": "array",
            "description": "Database connections. Main article is <a href=\"https://unitybase.info/api/server-v5/tutorial-database_tuning.html\">here</a> Tips: <ul><li>On Windows Oracle Instant Client distributed with <a href=\"http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html\">Oracle Instant Client</a> can be copied to the bin/OracleInstantClient</li><li>To prevent storing oracle credential in config you can use <a href=\"https://dev.intecracy.com/confluence/pages/viewpage.action?pageId=65274525#Installation(requirements)-OracleWalletconfiguration\">Oracle Wallet</a></li><li>to prevent Oracle client disconnect in case on inactivity add the SQLNET.EXPIRE_TIME to the sqlnet.ora file on the server and set it and set it to some interval (10 for example)</li></ul>",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "unique": true,
                "description": "Unique connection name. This name is used inside `meta` file to identify where entity are persisted"
              },
              "isDefault": {
                "type": "boolean",
                "description": "Is this connection is default for application i.e used for entities without `connectionName` defined"
              },
              "statementCacheSize": {
                "type": "number",
                "description": "The number of prepared statements, cached by database driver on the client (UB) side. 0 - disable cache (for PostgreSQL in case of multi-tenancy etc.)",
                "default": 30
              },
              "driver": {
                "enum": [
                  "Oracle",
                  "MSSQL2008OleDB",
                  "MSSQL2012OleDB",
                  "MSSQLODBC",
                  "SQLite3",
                  "PostgreSQL",
                  "PostgreSQLODBC",
                  "Firebird",
                  "MySQL"
                ],
                "description": "Database driver used for connection"
              },
              "dialect": {
                "enum": [
                  "AnsiSQL",
                  "Oracle9",
                  "Oracle10",
                  "Oracle11",
                  "MSSQL2008",
                  "MSSQL2012",
                  "SQLite3",
                  "PostgreSQL",
                  "Firebird",
                  "MySQL"
                ],
                "description": "Database dialect. We need it to properly optimize ORM for new database features",
                "default": "AnsiSQL"
              },
              "serverName": {
                "type": "string",
                "description": "Database host\n\n |DBMS  |Format|Example\n|-\n| `MS SQL`|Windows: [protocol:]hostname or IP[\\instanceName]; Linux: section name from `/etc/odbc.ini`| example1: `\"SQLSERVER1\\instance2\"` <br> example2: \"tcp:SQL_SERVER12\" <br> example linux: \"myserver\"\n| `Oracle`| TNS_NAME or <br> TNS definition string| example1: \"MyOraTNSName\"<br>example: \"(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=do5-s8)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=ORAUTC)))\" \n| `Postgre` | A host part of PostgreURL | Recommended to be empty - use a full PostgreURL in the `databaseName` instead |"
              },
              "databaseName": {
                "type": "string",
                "description": "Name of the database\n\n |DBMS  |Mean|Example\n|-\n| `MS SQL`|Name of a database| \"myDatabase\" \n| `Oracle`| not applicable|  \n| `Postgre` | PostgreURL  - https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING | \"postgres://host:port/dbname?tcp_user_timeout=3000\" \n| `SQLite3`|Full path to database file. **Don`t use UNC path here - only local file system files is allowed**| \"d:\\myDB\\myDatabase.db\""
              },
              "userID": {
                "type": "string",
                "description": "Name of user\n\n |DBMS  |Mean\n|-\n| `MS SQL`|User name for mixed authentication. \"\" for SSPI.\n| `Oracle`| Role name or \"\" in case of using `oracle wallet`\n| `Postgre` | Schema owner \n| `SQLite3`|Not applicable"
              },
              "password": {
                "type": "string",
                "description": "Password (if applicable)"
              },
              "supportLang": {
                "type": "array",
                "description": "Array of supported locales (applicable to multi-language attributes) for current connection",
                "items": {
                  "type": "string"
                }
              },
              "executeWhenConnected": {
                "type": "array",
                "description": "Statements, which executed when new database connection is established<br>For example: [\"ALTER SESSION SET NLS_COMP=LINGUISTIC\",\"ALTER SESSION SET NLS_SORT=BINARY_CI\"]",
                "items": {
                  "type": "string"
                }
              },
              "advSettings": {
                "type": "string",
                "description": "Advanced driver settings(optional)\n\n |DBMS| Value  | Example \n|-\n|`Postgre`|LibLocation=`Path to 64bit libpq library`| Windows: \"LibLocation=C:/Program Files/PostgreSQL (x86)/10/bin/libpq.dll\"<br><br>Linux: can be empty or \"LibLocation=libpq.so.5\"\n| `Oracle`| Combination of `INLINE_IN` `USE_WALLET` and `CARDINALITY_IN`<br>INLINE_IN - do not use array bindings for `in` and `not in` condition<br><br>CARDINALITY_IN (Oracle, UB EE - ORM adds `/*+ CARDINALITY(t1, P) */` hint for IN sub-queries;<br>P value depends on array length L:  L<10 => P = 1; L < 50 => P=10 else P = 100<br>(UB5 only) LibLocation=`Path to folder with oci.dll(windows only)` | \"INLINE_IN,CARDINALITY_IN,USE_WALLET,LibLocation=/usr/lib/oracle/11.2/clien64/lib\" \n| `MS SQL (ODBC)` | [STATEMENT_TIME_LIMIT=seconds] | \"STATEMENT_TIME_LIMIT=3\" \n| `SQLIte3` | [Synchronous=Full or Off or Normal],[Tokenizer=stemka,TokenizerParams=\"stem=yes or no\" \"lang=uk or ru or en\"] | \"Synchronous=Off,Tokenizer=stemka\""
              },
              "statementMaxMemoryMb": {
                "type": "Number",
                "default": 50,
                "description": "Maximum fetch size for DataStore. If a result set exceeds this limit, an Exception is raised. This avoids unexpected OutOfMemory errors and server crash when incorrect statement what returns too many rows or too big content are executed"
              }
            }
          }
        },
        "blobStores": {
          "type": "array",
          "description": "Database connections definition for application",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "unique": true,
                "description": "Unique blobStore name. This name is used in `meta` file to determine where the attributes of the type `Document` store their content"
              },
              "storeType": {
                "enum": ["FileSystem", "Virtual"],
                "default": "FileSystem",
                "description": "DEPRECATED. Use implementedBy instead"
              },
              "isDefault": {
                "type": "boolean",
                "description": "Is this store is default for the application. i.e. used in `Document` type entity attributes without store name defined"
              },
              "implementedBy": {
                "type": "string",
                "description": "Name of the module what implement a BlobStoreCustom interface for this store"
              },
              "path": {
                "type": "string",
                "description": "Path to the folder where all files are placed"
              },
              "tempPath": {
                "type": "string",
                "description": "Path for storing uncommitted files. Recommended to be on the same volume as `path`. In case of reverse proxy - must be inside store folder",
                "default": "path.join(this.path, '_temp')"
              },
              "historyDepth": {
                "type": "number",
                "description": "Depth of the revision history. 0 means no history",
                "default": 0
              },
              "storeSize": {
                "enum": ["Simple", "Medium", "Large", "Monthly", "Daily", "Hourly"],
                "description": "Approximate number of files to store\n\n |Value  |Description\n|-\n| `Simple`|Up to 10000\n| `Medium`| Up to 500 000\n| `Large` | More when 500 000\n| `Monthly`| New subfolder `YYYYMM` for every month\n| `Daily`| New sub-folder `YYYYMM` for every month and when new folder `DD` for every day\n| `Hourly`| As Daily but with sub-folder for each hour inside a day folder",
                "default": "Simple"
              },
              "LUCount": {
                "type": "number",
                "description": "Logical Units count. If > 0 then files are stored inside `Logical Unit` sub-folders `/LU01`, `/LU02`, ... Folder, what contains OLD files MUST be mounted to /LU00 manually. Write operations works with last LU folder.\nEach LU folder can be mounted to his own partition. In this case `tempPath` should point to the same partition as last LU.\n Applicable only for `non-Simple` 'FileSystem' based  stores",
                "default": 0,
                "maxValue": 99
              },
              "keepOriginalFileNames":{
                "type": "boolean",
                "default": false,
                "description": "Put files into store using it original file names. If the same store is used for several entity/attribute client MUST guaranty unique file names between entities/attributes (e.g. use different prefix for different entity+attribute combination)"
              }
            }
          }
        },
        "customSettings": {
          "type": "object",
          "description": "Any settings, accessible inside server-side js using `App.customSettings`",
          "additionalProperties": true
        },
        "fts": {
          "type": "object",
          "description": "Build-in Full Text Search engine settings",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "async": {
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    },
    "uiSettings": {
      "type": "object",
      "description": "Settings, passed to UI in getAppInfo method. We recommend to place here ONLY parameters, necessary for UI initialization. Client-side app can access this settings using UB.connection.appConfig.uiSettings",
      "additionalProperties": false,
      "properties": {
        "cspAllow": {
          "type": "object",
          "description": "Extension of CSP header with custom rules",
          "properties": {
            "defaultSrc": {
              "type": "array",
              "description": "Additional rules for `default-src`",
              "items": {
                "type": "string"
              }
            },
            "scriptSrc": {
              "type": "array",
              "description": "Additional rules for `script-src`",
              "items": {
                "type": "string"
              }
            },
            "connectSrc": {
              "type": "array",
              "description": "Additional rules for `connect-src`",
              "items": {
                "type": "string"
              }
            },
            "objectSrc": {
              "type": "array",
              "description": "Additional rules for `object-src`",
              "items": {
                "type": "string"
              }
            },
            "styleSrc": {
              "type": "array",
              "description": "Additional rules for `style-src`",
              "items": {
                "type": "string"
              }
            },
            "imgSrc": {
              "type": "array",
              "description": "Additional rules for `img-src`",
              "items": {
                "type": "string"
              }
            },
            "frameSrc": {
              "type": "array",
              "description": "Additional rules for `frame-src`",
              "items": {
                "type": "string"
              }
            },
            "fontSrc": {
              "type": "array",
              "description": "Additional rules for `font-src`",
              "items": {
                "type": "string"
              }
            },
            "baseUri": {
              "type": "array",
              "description": "Additional rules for `base-uri`",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "adminUI": {
          "type": "object",
          "description": "Settings for admin UI",
          "additionalProperties": false,
          "properties": {
            "applicationName": {
              "type": ["string", "object"],
              "description": "Name of application for show on the login form. In case explicitly defined as empty string - not shown in login form. For localization can be specified as object with keys=locale: {\"en\": \"My App\", \"uk\": \"Мій додаток\"}",
              "default": "UnityBase"
            },
            "applicationTitle": {
              "type": "string",
              "description": "Title of HTML page for adminUI",
              "default": "UnityBase"
            },
            "defaultPasswordForDebugOnly": {
              "type": "string",
              "description": "For development purpose only"
            },
            "themeName": {
              "type": "string",
              "description": "UI theme name. Can be name of a folder in the `inetPub\\themes\\` folder",
              "default": "UBGrayTheme"
            },
            "loginURL": {
              "type": "string",
              "description": "A custom login page.  If specified, unauthorized users will be redirected to this page"
            },
            "registrationURL": {
              "type": "string",
              "description": "User registration page URL. If empty (default) then the registration link should not be displayed on login page",
              "default": ""
            },
            "forgotPasswordURL": {
              "type": "string",
              "description": "User forgot password page URL. If empty (default) then the forgot password link should not be displayed on login page",
              "default": ""
            },
            "loginWindowTopLogoURL": {
              "type": "string",
              "description": "Optional URL for a logo to display on the top of login form. Logo stretched to 150px height, so it is a good idea for logo to be 150x150px"
            },
            "endpoint": {
              "type": "string",
              "description": "The entry point for a adminUI interface. In case both adminUI & portalUI is used on the same instance set this parameter to something long and unique to prevent hacking",
              "default": "equal to application.rootHandler"
            },
            "messenger": {
              "type": "object",
              "description": "Messenger config",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "checkInterval": {
                  "type": "number",
                  "description": "Long pooling time (in seconds)"
                }
              }
            },
            "hmrServerURL": {
              "type": "string",
              "description": "@unitybase/hmr Hot module replacer web socket URL",
              "default": "equal to application.rootHandler"
            },
            "encryptionImplementation" : {
              "type": "array",
              "description": "Define available encryption implementations for App.pki()",
              "items": {
                "type": "string",
                "description": "Module what implements a UbPkiInterface interface. Known modules are \"@ub-d/iit-sign-web\", \"@ub-d/iit-sign-js\" "
              }
            },
            "authenticationCert": {
              "type": "object",
              "description": "Config for authentication CERT",
              "properties": {
                "requireUserName": {
                  "type": "boolean",
                  "description": "Show user name field when enabled simpleCerAuth"
                },
                "userNameRE": {
                  "type": "string",
                  "description": "Regular expression for user name validation"
                },
                "userNameREMessage": {
                  "type": "string",
                  "description": "Message for user name validation"
                },
                "description": {
                  "type": "string",
                  "description": "Description that show below username and password"
                }
              }
            },
            "linter": {
              "type": "object",
              "description": "JavaScript linter options - used in adminUI form editor & shortcut editor. See <a href=\"http://jshint.com/docs/options/\">JSHINT documentation</a> for full options list"
            },
            "onlyOffice": {
              "type": "object",
              "description": "Configuration options for OnlyOffice ",
              "properties": {
                "serverIP": {
                  "type": "string",
                  "description": "IP address and port where OnlyOffice document server can be found in format 'ip:port'"
                }
              }
            },
            "disableScanner": {
              "type": "boolean",
              "description": "Hide all scanner related functionality from adminui"
            },
            "favoriteCategoryCount": {
              "type": "number",
              "description": "Number of categories (up to 4) for a favorites columns",
              "default": 2
            },
            "amqpNotificationUrl": {
              "type": "string",
              "description": "A url for UBClientNotifier to connect to message broker using stomp protocol over web sockets. The special value, '*', means connecting to ws[s]://<host>/ws which is useful when nginx is used to proxify requests. An example of valid url is 'ws://127.0.0.1:15674/ws' - this is for RabiitMQ with web stomp extension default configuration. For server part - set application.customSettings.amqpNotificationUrl"
            },
            "recognitionEndpoint": {
              "type": "string",
              "description": "An endpoint name used for recognize scanned documents. An example of valid name is 'ocr/' - this is for **Tesseract** recognition implemented by `@ub-e/ocr` package."
            },
            "pdfViewer": {
              "type": "object",
              "description": "Configuration options for pdf viewer",
              "properties": {
                "customURI": {
                  "type": "string",
                  "description": "Custom PDF viewer to use instead of browser default. Loaded inside iframe - see PDFComponent.js\n Placeholders: {0}-will be replaced by encodeURIComponent(blobUrl); {1} - user language; {2} - instanceID. Examples: 1) PDFJs viewer '/clientRequire/@docflow/doc/public/node_modules/pdfjs/web/viewer.html?file={0}#locale={1}' 2) Pdf with annotations: '/clientRequire/@docflow/pdf-annotate/dist/index.html?file={0}&docID={2}#locale={1}'",
                  "default": ""
                },
                "uriSuffix": {
                  "type": "string",
                  "description": "Additional parameters passed to PDF viewer ULR. See https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/pdf_open_parameters.pdf for details",
                  "default": "#view=Fit"
                }
              }
            },
            "pdfFontMapping": {
              "type": "object",
              "description": "Font mapping for @unitybase/pdf. Keys is an original font name (TimesNewRoman for example), values is a real font file name (TimesNewRoman_Cyr for example)"
            },
            "sidebarLogoURL": {
              "type": "string",
              "description": "Optional URL for a small logo to display on the top of the sidebar. The recommended size for this logo is 40x40 px. It will be shown when the sidebar is collapsed. In a case when this prop is set and sidebarLogoBigURL is unset will show this logo in expanded too",
              "default": ""
            },
            "sidebarLogoBigURL": {
              "type": "string",
              "description": "Optional URL for a big logo to display on the top of sidebar. Recommended size 160x40 px. It will be show when sidebar is not collapsed",
              "default": ""
            },
            "useVueTables": {
              "type": "boolean",
              "description": "Replace Ext.GridEntityPanel by vue UTableEntity"
            },
            "forceModalsForEditForms": {
              "type": "boolean",
              "description": "If true actions `EditItem` and `AddNewItem` force form to be opened as modal. If false (default) - new and edit forms are opened in new tab",
              "default": false
            }
          }
        },
        "portalUI": {
          "type": "object",
          "description": "Settings for portal UI",
          "additionalProperties": true
        },
        "nativeUI": {
          "type": "object",
          "description": "Settings for Android/iOS client",
          "additionalProperties": true
        }
      }
    },
    "licenseFilePath": {
      "type": "string",
      "description": "For EE/DE editions - path to license file",
      "default": "%UB_APPDATA%ubLicense.json"
    }
  }
}
